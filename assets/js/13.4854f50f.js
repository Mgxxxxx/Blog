(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{384:function(t,s,a){"use strict";a.r(s);var n=a(24),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"node中的事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node中的事件循环"}},[t._v("#")]),t._v(" Node中的事件循环")]),t._v(" "),a("p",[t._v("Node中的事件循环是由底层的"),a("code",[t._v("libuv")]),t._v("实现的。\n"),a("img",{attrs:{src:t.$withBase("/assets/img/js/EventLoopInNode.jpg"),alt:"EventLoop"}})]),t._v(" "),a("p",[t._v("上图中，事件循环分为了6各阶段：")]),t._v(" "),a("ul",[a("li",[t._v("Timers:用来处理setTimeout()和setInterval()的回调")]),t._v(" "),a("li",[t._v("I/O callbacks:大多数的回调方法在这个阶段执行，除了timers, close和setImmediate事件的回调")]),t._v(" "),a("li",[t._v("idle, prepare:尽在内部使用，暂时不需管它")]),t._v(" "),a("li",[t._v("Poll:轮询，不断检查有没有新的IO事件，事件循环可能会在这里阻塞")]),t._v(" "),a("li",[t._v("Check:处理setImmediate()事件回调")]),t._v(" "),a("li",[t._v("close callbacks:处理一些close相关的事件")])]),t._v(" "),a("p",[t._v("这里主要介绍一下Poll阶段。Poll阶段主要有两个步骤：")]),t._v(" "),a("ul",[a("li",[t._v("如果有到期的定时器，那么就执行定时器的回调方法")]),t._v(" "),a("li",[t._v("处理poll阶段对应的事件队列（以下简介poll队列）里的事件")])]),t._v(" "),a("p",[t._v("当事件循环到达poll阶段时，如果这时候没有要处理的定时器的回调方法，则会进行下面的判断：")]),t._v(" "),a("ul",[a("li",[t._v("如果poll队列不为空，则事件循环会按照顺序遍历执行队列中的回调函数，这个过程是同步的")]),t._v(" "),a("li",[t._v("如果poll队列为空，会接着进行如下判断：\n"),a("ul",[a("li",[t._v("如果当前代码中有setImmediate方法，事件循环就会直接离开poll阶段，进入check阶段执行setImmediate方法定义的回调方法。（chekc阶段是为了setImmediate方法而设置的）")]),t._v(" "),a("li",[t._v("如果当前代码没有定义setImmediate方法，事件循环就会进入等待状态，并等待新的事件出现。该阶段会不断检查是否有相关的定时器超时，若有，则直接跳转到timers阶段，然后执行对应的回调函数")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("h3",{attrs:{id:"process-nexttick和setimmediate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick和setimmediate"}},[t._v("#")]),t._v(" process.nextTick和setImmediate")]),t._v(" "),a("p",[t._v("nextTick时在当前事件循环阶段结束的时候执行。setImmediate实在check阶段执行。故nextTick总会在setImmediate之前执行。")]),t._v(" "),a("h3",{attrs:{id:"settimeout和setimmediate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#settimeout和setimmediate"}},[t._v("#")]),t._v(" setTimeout和setImmediate")]),t._v(" "),a("p",[t._v("setTimeout方法会在规定时间内到期后执行，setImmediate方法会在poll阶段结束后执行")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以下的打印顺序不确定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immediate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//以下永远是"immediate"先打印，因为readFile的回调执行时，')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//事件循环位于poll阶段，故事件循环会先进入check阶段执行setImmediate的回调，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//然后再进入timers执行setTimeout的回调")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("raedFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immediate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h3",{attrs:{id:"nexttick和promise-then"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nexttick和promise-then"}},[t._v("#")]),t._v(" nextTick和Promise.then()")]),t._v(" "),a("p",[t._v("两者都是在当前事件阶段结束后执行，但是nextTick先于Promise.then()执行")])]),t._v(" "),a("h2",{attrs:{id:"浏览器中的事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的事件循环"}},[t._v("#")]),t._v(" 浏览器中的事件循环")]),t._v(" "),a("h3",{attrs:{id:"主线程和任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主线程和任务队列"}},[t._v("#")]),t._v(" 主线程和任务队列")]),t._v(" "),a("p",[t._v("简单来说，主线程时执行代码的地方，任务队列是存储主线程中产生的异步任务，它是一个队列，遵循先进先出的规则。当主线程执行完所有任务之后，会从任务队列中取走任务到主线程，然后继续执行，一直重复上述操作（即完成任务➡从任务队列取任务➡完成任务）。")]),t._v(" "),a("h3",{attrs:{id:"宏任务-macrotasks-和微任务-microtasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务-macrotasks-和微任务-microtasks"}},[t._v("#")]),t._v(" 宏任务(Macrotasks)和微任务(Microtasks)")]),t._v(" "),a("p",[t._v("任务队列中的任务队列可以分为宏任务队列和微任务队列。宏任务队列和微任务队列和任务队列一样，会先进先出。宏任务下述是产生宏任务和微任务的一些方法")]),t._v(" "),a("ul",[a("li",[t._v("宏任务：setTimeout, setInterval, I/O操作, UI渲染")]),t._v(" "),a("li",[t._v("微任务：Promise.then")])]),t._v(" "),a("p",[t._v("有了宏任务和微任务，就可以把整个事件循环的过程说明了。以下重述事件循环过程：")]),t._v(" "),a("ol",[a("li",[t._v("主线程把当前的代码执行完，若执行过程中产生宏任务，则把该宏任务添加到任务队列中的宏任务队列，若执行过程中产生微任务，则把该微任务添加到任务队列中的微任务队列")]),t._v(" "),a("li",[t._v("主线程执行完代码后，检查任务队列中的微任务队列是否有微任务，则把所有微任务调到主线程上执行完。执行过程中产生了宏任务和微任务也还是会添加到对应的队列")]),t._v(" "),a("li",[t._v("微任务队列没有任务了，机会执行UI渲染")]),t._v(" "),a("li",[t._v("UI渲染完成，主线程从宏任务中取出一个宏任务，执行该宏任务。")])]),t._v(" "),a("p",[t._v("事件循环即重复上述步骤。")])])}),[],!1,null,null,null);s.default=e.exports}}]);